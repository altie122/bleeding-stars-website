---
import Layout from '~/layouts/Layout.astro';
import Pagination from "~/components/paginationComponent.astro";
import { getCollection, getEntry, type CollectionEntry } from 'astro:content';
import type { GetStaticPathsOptions, Page } from "astro";
import BlogPostPreview from "./_components/BlogPostPreview.astro"

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	// 	const posts = [...(await getCollection("blog")), ...(await getCollection("updates"))];
	const posts = [...(await getCollection('blog', ({ data }) => {
  // return import.meta.env.PROD ? data.isDraft !== true : true;
  return data.isDraft !== true;
	})), ...(await getCollection('updates', ({ data }) => {
  // return import.meta.env.PROD ? data.isDraft !== true : true;
  return data.isDraft !== true;
	}))];

	const sortedPosts = posts.sort(
		(a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime(),
	);

	return paginate(sortedPosts, { pageSize: 5 });
}

const { page } = Astro.props as {
	page: Page<CollectionEntry<"blog"> | CollectionEntry<"updates">>;
};

const allPages = [...Array(page.lastPage).keys()].map((num) => {
	return `/blog${num === 0 ? "" : `/${String(num + 1)}`}`;
});

const allPosts = await getCollection("blog");

---

<Layout title="Blog" description='placeholder!'>
	<main>
    <div class="lg:py-18 grid-container relative py-12 sm:py-14 md:py-16 xl:py-20">
      <div class="relative flex flex-col items-center gap-6 text-center">
        <h1 class="text-2xl mx-auto max-w-screen-lg sm:text-3xl lg:text-4xl">Bleeding Stars Blog</h1>
      </div>
    </div>
    <div class="flex flex-col items-center gap-20 py-8 lg:p-12 xl:p-20">
			<ul class="flex max-w-screen-md flex-col gap-y-4 md:gap-y-6 lg:gap-y-8 list-none">
				{
					page.data.map((post) => (
						<li>
							<BlogPostPreview post={post} isUpdate={"isUpdate" in post.data} />
						</li>
					))
				}
			</ul>

			<Pagination restRoute allPages={allPages} page={page} class="mx-auto" />
		</div>
	</main>
</Layout>